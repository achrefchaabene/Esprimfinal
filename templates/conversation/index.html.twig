<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Mes conversations{% endblock %}</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #d62828;
            --secondary-color: #ba181b;
            --accent-color: #e5383b;
            --light-color: #f5f3f4;
            --white: #ffffff;
            --dark: #161a1d;
            --medium-gray: #b1a7a6;
            --dark-gray: #660708;
            --shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--light-color);
            color: var(--dark);
            min-height: 100vh;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 300px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            padding: 2rem;
            position: relative;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        .sidebar::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('https://images.unsplash.com/photo-1521791136064-7986c2920216?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') center/cover;
            opacity: 0.15;
            z-index: 0;
        }

        .profile-section {
            text-align: center;
            margin-bottom: 2rem;
            color: var(--white);
            position: relative;
            z-index: 1;
        }

        .profile-img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid var(--white);
            margin-bottom: 1rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            transition: var(--transition);
        }

        .profile-img:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }

        .profile-name {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .profile-email {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .nav-menu {
            margin-top: 2rem;
            position: relative;
            z-index: 1;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 0.8rem 1rem;
            margin-bottom: 0.5rem;
            border-radius: 8px;
            color: rgba(255, 255, 255, 0.9);
            text-decoration: none;
            transition: var(--transition);
            position: relative;
            background-color: rgba(255, 255, 255, 0.05);
        }

        .nav-item i {
            margin-right: 10px;
            font-size: 1.1rem;
        }

        .nav-item:hover, .nav-item.active {
            background-color: rgba(255, 255, 255, 0.2);
            color: var(--white);
            transform: translateX(5px);
        }

        .nav-item .badge {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background-color: var(--accent-color);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 2rem;
            background-color: var(--white);
            overflow-y: auto;
        }

        .section-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 1.5rem 0;
            color: var(--dark);
            display: flex;
            align-items: center;
            gap: 0.8rem;
            position: relative;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 60px;
            height: 4px;
            background: var(--primary-color);
            border-radius: 2px;
        }

        /* Conversation Cards */
        .conversations-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .conversation-card {
            background: var(--white);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
            border: 1px solid rgba(0, 0, 0, 0.05);
            opacity: 0;
            transform: translateY(20px);
            position: relative;
            overflow: hidden;
        }

        .conversation-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--primary-color);
            transition: var(--transition);
        }

        .conversation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .conversation-card:hover::before {
            width: 6px;
            background: var(--accent-color);
        }

        .conversation-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            align-items: center;
        }

        .conversation-participants {
            font-weight: 600;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .conversation-participants i {
            color: var(--medium-gray);
            font-size: 0.9rem;
        }

        .conversation-date {
            color: var(--medium-gray);
            font-size: 0.8rem;
            background: rgba(214, 40, 40, 0.1);
            padding: 0.3rem 0.6rem;
            border-radius: 20px;
        }

        .conversation-preview {
            color: var(--dark);
            margin-bottom: 0.5rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .conversation-unread {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 12px;
            height: 12px;
            background-color: var(--accent-color);
            border-radius: 50%;
        }

        .no-conversations {
            background: var(--white);
            border-radius: 12px;
            padding: 3rem 2rem;
            text-align: center;
            box-shadow: var(--shadow);
            grid-column: 1 / -1;
        }

        .no-conversations i {
            font-size: 3rem;
            color: var(--medium-gray);
            margin-bottom: 1.5rem;
            opacity: 0.7;
        }

        .no-conversations h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: var(--dark);
        }

        .no-conversations p {
            color: var(--medium-gray);
            margin-bottom: 1.5rem;
        }

        .btn-new-conversation {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            box-shadow: 0 4px 15px rgba(214, 40, 40, 0.3);
        }

        .btn-new-conversation:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(214, 40, 40, 0.4);
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .dashboard-container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                padding: 1.5rem;
            }
            
            .main-content {
                padding: 1.5rem;
            }
            
            .profile-img {
                width: 80px;
                height: 80px;
            }
        }

        @media (max-width: 768px) {
            .conversations-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
<div class="dashboard-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="profile-section">
            {% if app.user.profileImage %}
                <img src="{{ asset(app.user.profileImage) }}" alt="Profile" class="profile-img">
            {% else %}
                <img src="{{ asset('img/fxchat.png') }}" alt="Profile" class="profile-img">
            {% endif %}
            <h3 class="profile-name">{{ app.user.username }}</h3>
            <p class="profile-email">{{ app.user.email }}</p>
        </div>
        
        <div class="nav-menu">
            <a href="{{ path('job_seeker_home') }}" class="nav-item">
                <i class="fas fa-home"></i> Dashboard
            </a>
            <a href="{{ path('job_seeker_profile_index') }}" class="nav-item">
                <i class="fas fa-user-edit"></i> Edit Profile
            </a>
            <a href="#" class="nav-item">
                <i class="fas fa-file-alt"></i> My CV
            </a>
            <a href="{{ path('job_seeker_interviews_index') }}" class="nav-item">
                <i class="fas fa-comments"></i> Interviews
            </a>
            <a href="{{ path('conversation_index') }}" class="nav-item active">
                <i class="fas fa-envelope"></i> Messages
                {% if stats is defined and stats.messages > 0 %}
                    <span class="badge">{{ stats.messages }}</span>
                {% endif %}
            </a>
            <a href="{{ path('job_seeker_jobs_index') }}" class="nav-item">
                <i class="fas fa-briefcase"></i> Job Offers
            </a>
            <a href="{{ path('chatbot') }}" class="nav-item">
                <i class="fas fa-robot"></i> Assistant Tchala
            </a>
            <a href="{{ path('app_logout') }}" class="nav-item">
                <i class="fas fa-sign-out-alt"></i> Logout
            </a>
        </div>
    </div>
    
    <!-- Main Content -->
    <div class="main-content">
        <h1 class="section-title">
            <i class="fas fa-comments"></i> Mes conversations
        </h1>
        
        <a href="{{ path('conversation_new') }}" class="btn-new-conversation">
            <i class="fas fa-plus"></i> Nouvelle conversation
        </a>

        <!-- Formulaire de recherche -->
        <form action="{{ path('conversation_search') }}" method="GET" class="search-form">
            <input type="text" name="q" placeholder="Rechercher une conversation" value="{{ search_query|default('') }}">
            <button type="submit" class="btn btn-primary">Rechercher</button>
        </form>

        {% if search_query is defined and search_query %}
            <div class="search-results-header">
                <h3>Résultats pour "{{ search_query }}"</h3>
                <a href="{{ path('conversation_index') }}" class="btn btn-sm btn-outline-secondary">Réinitialiser</a>
            </div>
            
            {% if conversations|length > 0 %}
                <div class="search-results-count">{{ conversations|length }} conversation(s) trouvée(s)</div>
            {% else %}
                <div class="search-results-empty">Aucune conversation trouvée pour "{{ search_query }}"</div>
            {% endif %}
        {% endif %}

        {% if conversations is defined and conversations|length > 0 %}
            <div class="conversation-list">
                {% for conversation in conversations %}
                    <div class="conversation-item">
                        <div class="conversation-header">
                            <h4>{{ conversation.title }}</h4>
                            <small>Dernière mise à jour: {{ conversation.updatedAt|date('d/m/Y H:i') }}</small>
                        </div>
                        
                        {% if search_query is defined and search_query and matching_messages[conversation.id] is defined and matching_messages[conversation.id]|length > 0 %}
                            <div class="matching-messages">
                                <h5>Messages correspondants:</h5>
                                <ul class="message-list">
                                    {% for message in matching_messages[conversation.id] %}
                                        <li class="message-item">
                                            <div class="message-sender">{{ message.sender.username }}</div>
                                            <div class="message-content">{{ message.content }}</div>
                                            <div class="message-date">{{ message.createdAt|date('d/m/Y H:i') }}</div>
                                        </li>
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}
                        
                        <div class="conversation-actions">
                            <a href="{{ path('conversation_show', {'id': conversation.id}) }}" class="btn btn-sm btn-primary">
                                Voir la conversation
                            </a>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <div class="no-conversations">
                {% if search_query is defined and search_query %}
                    Aucune conversation ne correspond à votre recherche "{{ search_query }}".
                {% else %}
                    Vous n'avez pas encore de conversations.
                {% endif %}
            </div>
        {% endif %}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Fonction pour animer les cartes
        function animateCards() {
            const cards = document.querySelectorAll('.conversation-card:not(.show)');
            
            cards.forEach((card, index) => {
                const cardPosition = card.getBoundingClientRect().top;
                const screenPosition = window.innerHeight / 1.3;
                
                if(cardPosition < screenPosition) {
                    setTimeout(() => {
                        card.classList.add('show');
                    }, index * 100);
                }
            });
        }

        // Trigger animations
        window.addEventListener('load', animateCards);
        window.addEventListener('scroll', animateCards);

        // Real-time updates for unread count - using polling instead of Mercure
        function updateUnreadCount() {
            fetch('{{ path('conversation_unread_count') }}')
                .then(response => response.json())
                .then(data => {
                    const badge = document.querySelector('.nav-item.active .badge');
                    if (data.count > 0) {
                        if (!badge) {
                            const navItem = document.querySelector('.nav-item.active');
                            const newBadge = document.createElement('span');
                            newBadge.className = 'badge';
                            newBadge.textContent = data.count;
                            navItem.appendChild(newBadge);
                        } else {
                            badge.textContent = data.count;
                        }
                    } else if (badge) {
                        badge.remove();
                    }
                });
        }
        
        // Check for new messages every 30 seconds
        setInterval(updateUnreadCount, 30000);
        // Initial check
        updateUnreadCount();
    });
</script>
</body>
</html>































