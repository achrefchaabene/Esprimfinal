# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    profile_images_directory: '%kernel.project_dir%/public/uploads/profile_images'
    company_logos_directory: '%kernel.project_dir%/public/uploads/company_logos'
    resumes_directory: '%kernel.project_dir%/public/uploads/resumes'
    voice_messages_directory: '%kernel.project_dir%/public/voice_messages'
    admin_registration_code: 'admin123' # Code pour l'inscription des administrateurs
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
    admin_photos_directory: '%kernel.project_dir%/public/uploads/admin_photos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # GeminiApiService configuration
    App\Service\GeminiApiService:
        arguments:
            $client: '@http_client'
            $apiKey: '%env(GEMINI_API_KEY)%'
            $logger: '@logger'

    App\Repository\ConversationRepository:
        public: true
        tags: ['controller.service_arguments']

    # Ajoutez cette configuration si vous utilisez App\Mailer\ResetPasswordEmail
    App\Mailer\ResetPasswordEmail:
        arguments:
            $mailer: '@mailer'





















